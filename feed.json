{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/games/yuansheng/%E5%8E%9F%E5%9C%A3%E7%AD%96%E5%88%92%E6%A1%88%EF%BC%88%E7%AE%80%E6%98%8E%E7%89%88%EF%BC%89/",
            "url": "http://example.com/games/yuansheng/%E5%8E%9F%E5%9C%A3%E7%AD%96%E5%88%92%E6%A1%88%EF%BC%88%E7%AE%80%E6%98%8E%E7%89%88%EF%BC%89/",
            "title": "原圣策划案",
            "date_published": "2022-11-23T08:11:15.504Z",
            "content_html": "<h1 id=\"游戏简介\"><a class=\"markdownIt-Anchor\" href=\"#游戏简介\">#</a> 游戏简介</h1>\n<p>原圣是一款在三国杀框架下的融合原神反应机制的卡牌对战类游戏，并且其中设计对于原神反应在卡牌方面的融合可以套用于其他卡牌游戏。</p>\n<h1 id=\"元素与反应\"><a class=\"markdownIt-Anchor\" href=\"#元素与反应\">#</a> 元素与反应</h1>\n<h2 id=\"附着\"><a class=\"markdownIt-Anchor\" href=\"#附着\">#</a> 附着</h2>\n<ul>\n<li>相较于传统，我们特意将【判定区】改为【元素区】，通过某种特定规则置于【元素区】的牌称为元素附着，同种附着只存在一种，因此若已存在同种附着，则会以后手附着更换先手附着，后者置入弃牌堆。（除非先手附着为<em><strong>横置附着</strong></em>）</li>\n<li>【横置附着】是一种特殊的附着存在状态，它拥有很高的优先级，不会被同元素附着顶掉。</li>\n<li>牌堆中所有【实体元素杀】都可以直接<em><strong>竖直入</strong></em>其他角色的【元素区】，以这种方式进行的元素附着每回合限一次。</li>\n<li>【元素伤害】与【元素附着】没有必然联系。但是【元素伤害】也可以触发反应</li>\n</ul>\n<h2 id=\"触发反应\"><a class=\"markdownIt-Anchor\" href=\"#触发反应\">#</a> 触发反应</h2>\n<ul>\n<li>当一名角色被元素附着，或受到元素伤害时，根据此时元素区内的元素附着种类，依照反应规则触发反应。</li>\n<li>【元素精通】是所有角色的固有属性，默认为 1 点，上限为 5 点，可以通过角色技能等方式提高或临时提高元素精通点数。</li>\n</ul>\n<h2 id=\"反应规则\"><a class=\"markdownIt-Anchor\" href=\"#反应规则\">#</a> 反应规则</h2>\n<hr>\n<ul>\n<li>【蒸发】\n<ul>\n<li>水 + 火 = 蒸发，反应后所有附着置入弃牌堆。</li>\n<li>触发反应的伤害 * 2。（如果是附着触发蒸发，则只将水火附着置入弃牌堆）</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【融化】\n<ul>\n<li>冰 + 火 = 融化，反应后所有附着置入弃牌堆。</li>\n<li>触发反应的伤害 * 2。（如果是附着触发融化，则只将冰火附着置入弃牌堆）</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【感电】\n<ul>\n<li>水 + 雷 = 感电，反应后水元素附着进入弃牌堆。</li>\n<li>造成【元素精通】点雷电伤害，横置雷元素附着，称为【感电附着】。（如果是雷伤触发感电，则只将水附着置入弃牌堆）</li>\n<li>【感电附着】\n<ul>\n<li>角色判定阶段，若拥有此附着，则进行一次判定，若不为【梅花】，跳过本回合摸牌阶段。不论如何，将感电附着置入弃牌堆</li>\n<li>【感电附着】占据雷元素附着位，可以触发除感电外的所有有关雷元素的反应。受到水元素附着时会产生【水雷共存】，此后优先反应水附着。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【冻结】\n<ul>\n<li>水 + 冰 = 冻结，反应后水元素附着进入弃牌堆。</li>\n<li>横置冰元素附着，称为【冻结附着】。（如果是冰伤触发感电，则只将水附着置入弃牌堆）</li>\n<li>【冻结附着】\n<ul>\n<li>角色判定阶段，若拥有此附着，则进行一次判定，若不为【红桃】，跳过本回合出牌阶段。不论如何，将冻结附着置入弃牌堆</li>\n<li>【冻结附着】占据冰元素附着位，可以触发除冻结外的所有有关冰元素的反应。受到水元素附着时会产生【水冻共存】，此后优先反应水附着。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【超载】\n<ul>\n<li>火 + 雷 = 超载，反应后附着全部进入弃牌堆</li>\n<li>造成【元素精通】*2 的火元素伤害。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【超导】\n<ul>\n<li>冰 + 雷 = 超导，反应后附着全部进入弃牌堆</li>\n<li>将目标的（【元素精通】+1）张手牌置于角色旁，直到你的回合结束。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【扩散】\n<ul>\n<li>风 +（水 / 火 / 雷 / 冰）= 扩散，反应后附着全部进入弃牌堆</li>\n<li>造成 2*【元素精通】点对应元素伤害，然后获得一张目标元素区内的<em><strong>竖直</strong></em>元素附着</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【结晶】\n<ul>\n<li>岩 +（水 / 火 / 雷 / 冰）= 结晶，反应后附着全部进入弃牌堆</li>\n<li>令触发反映者护盾 + 1。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【原激化】\n<ul>\n<li>雷 + 草 = 原激化，反应后雷元素进入弃牌堆</li>\n<li>横置草元素附着，称为【激化附着】，（如果是草伤触发原激化，则只将雷附着置入弃牌堆）</li>\n<li>【激化附着】\n<ul>\n<li>角色判定阶段，若拥有此附着，则进行一次判定，若不为【方片】，则将激化附着置入弃牌堆。</li>\n<li>【激化附着】占据草元素附着位，可以触发除原激化外的所有有关草元素的反应。受到雷元素附着时会产生【雷激共存】，此后优先反应雷附着。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【超激化】\n<ul>\n<li>雷 + 激化 = 超激化，反应后雷元素附着进入弃牌堆。</li>\n<li>触发反应的伤害 * X+【元素精通】（X=【元素精通】❤️？1：2），激化附着立即进行一次判定。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【蔓激化】\n<ul>\n<li>草 + 激化 = 蔓激化，反应后草元素附着进入弃牌堆。</li>\n<li>触发反应的伤害 * X+【元素精通】（X=【元素精通】❤️？1：2），激化附着立即进行一次判定。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【绽放】\n<ul>\n<li>水 + 草 = 绽放，反应后草元素进入弃牌堆</li>\n<li>横置水元素附着，称为【绽放种附着】，（如果是水伤触发绽放，则只将草附着置入弃牌堆）</li>\n<li>【绽放种附着】\n<ul>\n<li>角色判定阶段，若拥有此附着，则进行一次判定，若不为【黑桃】，则对角色造成 1 点草元素伤害。不论如何，将绽放种附着置入弃牌堆.</li>\n<li>【绽放种附着】可以至多重叠两个，一起进行判定。有关【绽放种附着】的反应也会一起结算。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【超绽放】\n<ul>\n<li>雷 + 绽放种 = 超绽放，反应后雷附着进入弃牌堆</li>\n<li>绽放种附着立即进行一次判定，此时判定成功造成的伤害改为【元素精通】*X（X=【元素精通】❤️？1：2）。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【烈绽放】\n<ul>\n<li>火 + 绽放种 = 烈绽放，反应后火附着进入弃牌堆</li>\n<li>绽放种附着立即进行一次判定，此时判定成功造成的伤害改为 X（X=【元素精通】❤️？2：4），目标【周围】角色受到等量伤害。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>【燃烧】\n<ul>\n<li>草 + 火 = 燃烧，反应后草附着进入弃牌堆</li>\n<li>横置火元素附着，称为【燃附着】，（如果是火伤触发燃烧，则只将草附着置入弃牌堆）。</li>\n<li>【燃附着】\n<ul>\n<li>角色回合结束时，元素区有【燃附着】的角色依次受到 1 点无来源的火元素伤害。角色判定阶段，若角色拥有【燃附着】，优先将【草附着】置入弃牌堆，若没有【草附着】，再将【燃附着】置入弃牌堆。</li>\n<li>【燃附着】占据火附着位，可以触发除燃烧外的所有有关火元素的反应。受到草元素附着时会产生【补草】效果，草元素与燃元素共存，且草元素优先触发反应。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"角色设计\"><a class=\"markdownIt-Anchor\" href=\"#角色设计\">#</a> 角色设计</h1>\n<h2 id=\"基础模板\"><a class=\"markdownIt-Anchor\" href=\"#基础模板\">#</a> 基础模板</h2>\n<p>为了拓宽整个伤害的体系范围，我们提高了角色单回合输出期望以及出伤成本，对应了为了平衡游戏，我们同样提高了角色的平均血线，这样能够允许更平滑的伤害梯度与可思考空间。</p>\n<p>为了方便适配原神中繁杂的标记系统，我们特意将坐骑栏更换为【标记区】和【被标记区】。</p>\n<h3 id=\"盾奶模板\"><a class=\"markdownIt-Anchor\" href=\"#盾奶模板\">#</a> 盾奶模板</h3>\n<ul>\n<li>基础血线：10</li>\n<li>技能设计：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">伤害大致期望</th>\n<th style=\"text-align:left\">对自身</th>\n<th style=\"text-align:left\">对他人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">回合内</td>\n<td style=\"text-align:left\">-4</td>\n<td style=\"text-align:left\">-2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">回合外</td>\n<td style=\"text-align:left\">-2</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"副c模板\"><a class=\"markdownIt-Anchor\" href=\"#副c模板\">#</a> 副 c 模板</h3>\n<ul>\n<li>基础血线：7</li>\n<li>技能设计：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">伤害大致期望</th>\n<th style=\"text-align:left\">对自身</th>\n<th style=\"text-align:left\">对他人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">回合内</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">回合外</td>\n<td style=\"text-align:left\">-1</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"主c模板\"><a class=\"markdownIt-Anchor\" href=\"#主c模板\">#</a> 主 c 模板</h3>\n<ul>\n<li>基础血线：7</li>\n<li>技能设计：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">伤害大致期望</th>\n<th style=\"text-align:left\">对自身</th>\n<th style=\"text-align:left\">对他人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">回合内</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">回合外</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"增伤拐模板\"><a class=\"markdownIt-Anchor\" href=\"#增伤拐模板\">#</a> 增伤拐模板</h3>\n<ul>\n<li>基础血线：8</li>\n<li>技能设计：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等效伤害期望</th>\n<th style=\"text-align:left\">对自身</th>\n<th style=\"text-align:left\">对他人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">回合内</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">-1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">回合外</td>\n<td style=\"text-align:left\">-1</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"设计样例初稿\"><a class=\"markdownIt-Anchor\" href=\"#设计样例初稿\">#</a> 设计样例（初稿）</h2>\n<h4 id=\"珊瑚宫心海8血\"><a class=\"markdownIt-Anchor\" href=\"#珊瑚宫心海8血\">#</a> 【珊瑚宫心海】（8 血）</h4>\n<ul>\n<li>出牌阶段限一次，你可以弃置任意张牌，选择 n 名角色（n 为你以此法弃置的牌的数量），执行【幻海月】效果。若你以此法弃置不少于两张非基本牌，你成为【幻海月】效果的额外目标\n<ul>\n<li>【幻海月】：选择以下效果之一：\n<ol>\n<li>回复一点体力并摸一张牌。</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>锁定技，你即将造成伤害时，你立即防止此伤害。若你本回合因此法防止过来源为你的伤害，本回合你产生的回复量翻倍。</li>\n<li>回合开始时，若你满足 a. 为主公；b. 元素区内存在水元素附着；c. 生命值 &lt;=5，你令【幻海月】获得以下选项直到你的回合结束。\n<ol>\n<li>选项 1 的回复值提升至 1.5（最终结果向下取整）。</li>\n<li>增添选项 2：流失一点体力。</li>\n<li>增添选项 3：弃置所有牌，然后摸等量的牌。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"雷电将军7血\"><a class=\"markdownIt-Anchor\" href=\"#雷电将军7血\">#</a> 【雷电将军】（7 血）</h4>\n<ul>\n<li>每当一名角色通过弃牌发动技能时，你可以将牌堆顶的一张牌置于【标记区】内，称为【愿力】。【愿力】最多存在 10 张。</li>\n<li>每当一名角色造成伤害后，你可以弃置一张【愿力】，若如此做，你摸一张牌。每当一名角色受到伤害后，你可以弃置两张【愿力】，若如此做，你对伤害来源造成一点雷元素伤害。</li>\n<li>出牌阶段限一次，你可以弃置两张【黑桃】锦囊牌，若如此做，你可以对一名攻击范围内的角色造成 4 点雷元素伤害，然后你进入【梦想一心】状态（更换状态会失去原有技能体系，并获得一套新的技能体系）</li>\n<li>【梦想一心】\n<ul>\n<li>锁定技，你的杀均视为雷杀，且无次数限制。</li>\n<li>每当你使用雷杀指定目标后，你可以你可以弃置两张【愿力】令此杀伤害 + 1，然后若此杀被闪抵消，你可以弃置一张【愿力】，然后摸一张牌；若此杀成功造成伤害，你可以弃置一张【愿力】，令一名其他角色摸 X 张牌（X 为此杀造成的伤害数）</li>\n<li>锁定技，回合结束时，你令一名角色摸 4 张牌，然后你退出【梦想一心】状态。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"迪卢克8血\"><a class=\"markdownIt-Anchor\" href=\"#迪卢克8血\">#</a> 【迪卢克】（8 血）</h4>\n<ul>\n<li>回合开始时，你可以选择任意数量项：1. 跳过出牌阶段 2. 跳过摸牌阶段 3. 跳过判定阶段并流失一点体力 4. 跳过弃牌阶段并弃置两张牌。若如此做，回合结束时，视为使用了一张无距离限制且最多可以指定 n 名角色的火杀（n 为你以此法选择的选项数量）</li>\n<li>每当你使用火杀指定目标后，你可以弃置所有手牌，然后摸两张牌。若你以此法弃置的手牌中非基本牌的数量为：\n<ul>\n<li>一张及以上：此杀不可闪避</li>\n<li>两张及以上：伤害 + 1</li>\n<li>四张及以上：摸四张牌</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"枫原万叶6血\"><a class=\"markdownIt-Anchor\" href=\"#枫原万叶6血\">#</a> 【枫原万叶】（6 血）</h4>\n<ul>\n<li>锁定技，你的【元素精通】+1。</li>\n<li>出牌阶段限一次，你可以弃置任意张牌，然后选择等量的角色，对他们依次造成一点风元素伤害。若如此做，你可以将排队顶等量的牌背面向上置于他们的被标记区内，称为【聚引】。回合开始时，你收回所有【聚引】。</li>\n<li>【聚引】有此标记的角色计算同样有此标记的角色的距离时，始终为 1。</li>\n<li>限定技，出牌阶段，你可以对所有其他角色依次造成一点风元素伤害。若如此做，直到下个你的回合结束，每当一名角色准备阶段时，你都可以将一张手牌竖置于其元素区内。</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E5%BF%AB%E6%8E%92/",
            "url": "http://example.com/computer-science/c/%E5%BF%AB%E6%8E%92/",
            "title": "快速排序",
            "date_published": "2022-11-15T01:54:25.903Z",
            "content_html": "<h1 id=\"快速排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序\">#</a> 快速排序</h1>\n<p>c++ 的 stl 库里给出的 sort () 是典型的快速排序，相较于一般的排序方法，快速排序能够优化时间。</p>\n<h2 id=\"原理与步骤\"><a class=\"markdownIt-Anchor\" href=\"#原理与步骤\">#</a> 原理与步骤</h2>\n<p>快排的原理很常见，他的原理和步骤具体如下：</p>\n<ol>\n<li>\n<p>选取一组无序数列中间某一项（随机的一项），命名为 flag，从数列的最左端和最右端同时遍历（后文将左端索引称为 i，右端称为 j），直到左端和右端都找到一个 “不正常” 项，即左端大于 flag 的不正常项和右端小于 flag 的不正常项。</p>\n<blockquote>\n<p>为了防止有歧义特此说明，找不正常项的过程是顺序进行的两个循环，互相不受影响。</p>\n</blockquote>\n</li>\n<li>\n<p>快速排序所作的具体的行动就是让 flag 两边的所有项都 “正常”。这样做造成的结果是，左边的数字跨过 flag 到右边，或者把右边的数跨过 flag 到左边都一定是错误的，flag 在这个时候起到了将数列分界的作用。我们对分界后的子数列同样正常化他们 —— 最终只剩一个或两个数字的时候，正常化就可以完全等效为序列化。这可以用递归实现。</p>\n</li>\n<li>\n<p>正常化 flag 两边的序列最简单的方法就是交换 1 所找到的不正常项，强制让 flag 两边的正常化</p>\n</li>\n</ol>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<p>上述的原理只是为了方便理解，实际上有许多逻辑漏洞。修理这些逻辑漏洞会让理解变得困难，所以放到代码部分讲解。</p>\n<p>下面给出了一个数列 3 4 5 2 6 9 8 5，以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（5）为 flag 开始快排。读者跟着上面的思路找到 i 和 j 的不正常项后会注意到他们的位置是：i=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>(6),j=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (2),i 超过了 j。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/computer-science/c/%E6%A8%A1%E6%9D%BF/",
            "title": "位运算",
            "date_published": "2022-11-15T01:54:05.608Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/example/%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E5%BE%80%E5%93%AA%E7%9C%8B/",
            "url": "http://example.com/example/%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E5%BE%80%E5%93%AA%E7%9C%8B/",
            "title": "在这里在这里",
            "date_published": "2022-11-14T14:40:15.229Z",
            "content_html": "<h1 id=\"好耶\"><a class=\"markdownIt-Anchor\" href=\"#好耶\">#</a> 好耶</h1>\n<h2 id=\"制作人名单\"><a class=\"markdownIt-Anchor\" href=\"#制作人名单\">#</a> 制作人名单：</h2>\n<ul>\n<li>张泽睿      2022211397</li>\n<li>余思杰      2022211409</li>\n<li>周晨晓      2022211410</li>\n<li>胡晗喆      2022211411</li>\n<li>李阳          2022211412</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/",
            "url": "http://example.com/computer-science/c/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/",
            "title": "快速傅里叶变换",
            "date_published": "2022-11-09T00:10:05.111Z",
            "content_html": "<h1 id=\"快速傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#快速傅里叶变换\">#</a> 快速傅里叶变换</h1>\n<p>【注】菜鸡刚从 b 站大佬搬运的 FFT 科普里出来，所以写的东西可能会 “似曾相识”（真的有人看到这句话吗）</p>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<h2 id=\"提出问题\"><a class=\"markdownIt-Anchor\" href=\"#提出问题\">#</a> 提出问题</h2>\n<p>​\t现在我们想要处理这样的问题：给定两个多项式 A (x) 和 B (x), 求这样的 C (x) 满足：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>B</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A(x)\\times B(x)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t很简单的问题，就和题面一样直白。这里的 A (x) 和 B (x) 都是已知多项式，我们只需要用中学生都学会的乘法分配律就可以轻松解决。</p>\n<p>​\t然而，这样处理的问题在于，当 A (x) 和 B (x) 的阶数非常大的时候，这种算法无疑会浪费很多时间。让我们换一种思路解决这样的问题。</p>\n<h2 id=\"多项式的点表示法\"><a class=\"markdownIt-Anchor\" href=\"#多项式的点表示法\">#</a> 多项式的点表示法</h2>\n<p>​\t对于一个 n-1 阶多项式，我们只需要 n 阶个不同点就可以精确的给出，就像两点确定一条直线，三点确定一条抛物线一般。这个结论的证明非常简单易懂，你只需要证明下面这个线性方程有解即可</p>\n<blockquote>\n<p>（P (x) 是系数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">p_0,p_1,p_2,\\cdots,p_{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 的多项式，找到了 n 个点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_0,x_1,x_2,\\cdots,x_{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>）</p>\n</blockquote>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mn>0</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>0</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">…</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>0</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">…</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">…</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">…</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>p</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>p</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>p</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo lspace=\"0em\" rspace=\"0em\">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[\\begin{matrix}P(x_0)\\\\P(x_1)\\\\P(x_2)\\\\\\cdots \\\\p(x_2)\\end{matrix} \\right]=\\left[\\begin{matrix}1 &amp; x_0 &amp;x_0^2 &amp;\\ldots &amp; x_0^{n-1}\\\\1 &amp; x_1 &amp;x_1^2 &amp;\\ldots &amp; x_1^{n-1}\\\\1 &amp; x_2 &amp;x_2^2 &amp;\\ldots &amp; x_2^{n-1}\\\\\\cdots&amp; \\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots\\\\1 &amp; x_{n-1} &amp;x_{n-1}^2 &amp;\\ldots &amp; x_{n-1}^{n-1}\\\\\\end{matrix} \\right]\\left[\\begin{matrix}p_0\\\\p_1\\\\p_2\\\\\\cdots \\\\p_{n-1}\\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.00503em;vertical-align:-2.75004em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500000000000004em;\"><span style=\"top:-5.410000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.8099999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.6099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6.0569560000000005em;vertical-align:-2.7784780000000002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2784780000000002em;\"><span style=\"top:-5.424239000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.995761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.795761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.5815219999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7784780000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2784780000000002em;\"><span style=\"top:-5.424239000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.995761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.795761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.5815219999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7784780000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2784780000000002em;\"><span style=\"top:-5.424239000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.995761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.795761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.5815219999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999998em;\"><span style=\"top:-2.451892em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30643899999999996em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7784780000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2784780000000002em;\"><span style=\"top:-5.424239000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">…</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">…</span></span></span><span style=\"top:-2.995761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">…</span></span></span><span style=\"top:-1.795761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.5815219999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">…</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7784780000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2784780000000002em;\"><span style=\"top:-5.424239000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.854239em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.854239em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.995761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.854239em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.795761em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.5815219999999999em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.854239em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.324639em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7784780000000002em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500000000000004em;\"><span style=\"top:-5.410000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.8099999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\">⋯</span></span></span><span style=\"top:-0.6099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>​\t系数矩阵是一个范德蒙德矩阵，他很显然是一个满秩矩阵 —— 只要保证任意两个 x 不相等，这说明上述的线性方程组有唯一解，定理得证。</p>\n<p>​\t这代表着我们不需要做繁琐的多项式展开，只需在 A (x) 和 B (x) 上找到 n 个互不相等的点，将这些点的纵坐标相乘，获得表达 C (x) 的这一组点，最后通过求解上面的线性方程组，就能得到 C (x) 的具体而又精确的表达式。</p>\n<p>​\t这真的足够简便吗？并非如此。你会发现当你试图进行第一步：找这样的点的时候，你将面临一个复杂的计算。这样的计算还要重复（n+1）次，从时间复杂的上来看，你似乎在南辕北辙。</p>\n<h2 id=\"正负对取点\"><a class=\"markdownIt-Anchor\" href=\"#正负对取点\">#</a> 正负对取点</h2>\n<p>​\t简单的随意去点似乎不能让我们事半功倍，但这正是 FFT 算法的精妙之一。FFT 用到的取点方法能够实打实地降低计算的复杂程度。</p>\n<p>​\t假设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">P(x)=x^{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span></span>, 你现在想取四个点，不妨就令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>2</mn><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>4</mn></msub><mo>=</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">x_{1}=1,x_{2}=-1,x_{3}=2,x_{4}=-2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span></span>, 这样当你把 1 或者 2 带入计算的同时，你也得知了 - 1 和 - 2 所对应的函数值.</p>\n<p>​\t根据函数的奇偶性可以 “咔！” 的一下将工作量减半。这是个投机倒把的小技巧，似乎只能在这样特别好看的函数上才能落实到位…</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E9%AB%98%E7%B2%BE%E5%BA%A6/",
            "url": "http://example.com/computer-science/c/%E9%AB%98%E7%B2%BE%E5%BA%A6/",
            "title": "高精度算法",
            "date_published": "2022-11-05T09:17:35.628Z",
            "content_html": "<h1 id=\"高精度\"><a class=\"markdownIt-Anchor\" href=\"#高精度\">#</a> 高精度</h1>\n<h2 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h2>\n<p>​\t高精度是用来算超级大的数字们的。。我们知道很多编译器都只支持最大用十几个字节来存储一个数字。。这明显已经足够处理日常生活中的数字了，但总有些题目涉及的运算 —— 例如阶乘或者指数运算之类的，就连十几个字节也会被撑爆掉（足够变态不是吗）我们只能通过一些繁杂的手法处理这种神经病一般的数字。。这种算法统称高精度</p>\n<h2 id=\"数据的存储与调用\"><a class=\"markdownIt-Anchor\" href=\"#数据的存储与调用\">#</a> 数据的存储与调用</h2>\n<p>​\t高精度要求你所能存储的数尽可能的大，不妨直接开一个数组来存这样的大麻烦。数组中每一项只存储这个数字的一位，这样的好处是就算数字达到了 10000 位之大他都能塞得进数组里。</p>\n<p>​\t为了方便让这个家伙进位，我们应该让他倒着在数组里躺着。自然在调用的时候也得倒着来</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><br><span class=\"hljs-comment\">//高精度整数定义</span><br><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">BigInt</span> &#123;<br>\t<span class=\"hljs-type\">int</span> len = <span class=\"hljs-number\">0</span>;<span class=\"hljs-comment\">//长度</span><br>\t<span class=\"hljs-type\">int</span> num[MAX] = &#123;<span class=\"hljs-number\">0</span>&#125;;<span class=\"hljs-comment\">//具体的数字</span><br><br>\t<span class=\"hljs-comment\">//初始化，将一个整数转化为高精度</span><br>\t<span class=\"hljs-built_in\">BigInt</span>(<span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">0</span>) <br>    &#123;<br>\t\t<span class=\"hljs-built_in\">memset</span>(num, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">sizeof</span>(num));<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; x; i++, len++)<br>        &#123;<br>\t\t\tnum[i] = x % <span class=\"hljs-number\">10</span>;<br>\t\t\tx /= <span class=\"hljs-number\">10</span>;<br>        &#125;<br>    &#125;<br><br>\t<span class=\"hljs-comment\">//重载[]，让他直接访问BigInt的数据</span><br>\t<span class=\"hljs-type\">int</span> &amp;<span class=\"hljs-keyword\">operator</span>[](<span class=\"hljs-type\">int</span> i)<br>    &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> num[i];<br>    &#125;<br><br>\t<span class=\"hljs-comment\">//进位与更新长度</span><br>\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">jinwei</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= MAX; i++)<br>        &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (num[i] &gt; <span class=\"hljs-number\">9</span>)<br>            &#123;<br>\t\t\t\tnum[i + <span class=\"hljs-number\">1</span>] += num[i] / <span class=\"hljs-number\">10</span>;<br>\t\t\t\tnum[i] %= <span class=\"hljs-number\">10</span>;<br>\t\t\t\tlen++;<br>            &#125;<br>        &#125;<br>\t\t<span class=\"hljs-keyword\">while</span> (!num[len])<br>        &#123;<br>\t\t\tlen--;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-comment\">//输入</span><br>\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">scan</span><span class=\"hljs-params\">(string temp)</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>\t\tcin &gt;&gt; temp;<br>\t\tlen = temp.<span class=\"hljs-built_in\">length</span>();<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; i++)<br>        &#123;<br>\t\t\tnum[len - i] = temp[i] - <span class=\"hljs-string\">&#x27;0&#x27;</span>;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-comment\">//输出</span><br>\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">print</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--) <br>        &#123;<br>\t\t\tcout &lt;&lt; num[i];<br>\t\t&#125;<br>\t&#125;<br>&#125;;<br></code></pre></td></tr></table></figure>\n<h2 id=\"赋值\"><a class=\"markdownIt-Anchor\" href=\"#赋值\">#</a> 赋值</h2>\n<p>重载 =，让 = 右边的 BigInt 赋值给左边。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><br><span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>= (BigInt&amp; left,BigInt right)<br>&#123;<br>    left.len=right.len;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;=right.len;i++)<br>    &#123;<br>        left[i]=right[i];<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=right.len;i&lt;=left.len;i++)<br>    &#123;<br>        left[i]=<span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\">#</a> 加法</h2>\n<p>​\t高精度的加法分为两种情况，与普通数字相加或与同样的高精度相加。。但是二者的技术细节大致相等</p>\n<h3 id=\"与普通数字相加\"><a class=\"markdownIt-Anchor\" href=\"#与普通数字相加\">#</a> 与普通数字相加</h3>\n<p>​\t我们的高精度数字是一个数组，这意味着一个 “位” 上不止能存 1~9。。如果只是普通的数字，你大可以将他放在高精度的末尾，然后进行再一个个进位。。当然，我跟喜欢再进位的过程中更新一下高精度的长度。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><br>BigInt <span class=\"hljs-keyword\">operator</span>+ (BigInt a,<span class=\"hljs-type\">int</span> b)<br>&#123;<br>    BigInt r;<br>    r=a;<br>    r.len=a.len+<span class=\"hljs-number\">1</span>;<br>    r[<span class=\"hljs-number\">1</span>]+=n;<br>    r.<span class=\"hljs-built_in\">jinwei</span>();<br>    <span class=\"hljs-keyword\">return</span> r;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"与高精度相加\"><a class=\"markdownIt-Anchor\" href=\"#与高精度相加\">#</a> 与高精度相加</h3>\n<p>​\t与高精度相加似乎与普通数字相加的区别不大 —— 你只需将加这个动作在每个位数上都来上一遍，最后进行进位即可。。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><br>BigInt <span class=\"hljs-keyword\">operator</span>+ (BigInt a, BigInt b)<br>&#123;<br>\tBigInt r;<br>\t<span class=\"hljs-type\">int</span> l = a.len &gt; b.len ? a.len : b.len;<br>\tl += <span class=\"hljs-number\">1</span>;<br>\tr.len = l;<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= l; i++)<br>    &#123;<br>\t\tr[i] = a[i] + b[i];<br>\t&#125;<br>\tr.<span class=\"hljs-built_in\">jinwei</span>();<br>\t<span class=\"hljs-keyword\">return</span> r;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"乘法\"><a class=\"markdownIt-Anchor\" href=\"#乘法\">#</a> 乘法</h2>\n<h3 id=\"与普通数字相乘\"><a class=\"markdownIt-Anchor\" href=\"#与普通数字相乘\">#</a> 与普通数字相乘</h3>\n<p>​\t与普通数字相乘即为每个数字乘上一个 n，不再赘述。。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><br><span class=\"hljs-comment\">//高乘单</span><br>BigInt <span class=\"hljs-keyword\">operator</span>* (BigInt a, <span class=\"hljs-type\">int</span> n)<br>&#123;<br>\tBigInt r;<br>\t<span class=\"hljs-type\">int</span> l = a.len;<br>\tr.len = l;<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= a.len; i++)<br>    &#123;<br>\t\tr[i] = a[i] * n;<br>\t&#125;<br>\tr.<span class=\"hljs-built_in\">jinwei</span>();<br>\t<span class=\"hljs-keyword\">return</span> r;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"与高精度相乘\"><a class=\"markdownIt-Anchor\" href=\"#与高精度相乘\">#</a> 与高精度相乘</h3>\n<p>与高精度相乘时，回忆竖式乘法，可以等效为与多个普通数字相乘之后再错位相加。错位相加这一步刚好可以用 BigInt 的 jinwei () 等效实现，代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><br><span class=\"hljs-comment\">//高乘高</span><br>BigInt <span class=\"hljs-keyword\">operator</span>* (BigInt a, BigInt b)<br>&#123;<br>\tBigInt r;<br>\tr.len = a.len + b.len;<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= a.len; i++)<br>    &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= b.len; j++)<br>        &#123;<br>\t\t\tr[i + j - <span class=\"hljs-number\">1</span>] += a[i] * b[j];<br>\t\t&#125;<br>\t&#125;<br>\tr.<span class=\"hljs-built_in\">jinwei</span>();<br>\t<span class=\"hljs-keyword\">return</span> r;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E4%BD%8D%E8%BF%90%E7%AE%97/",
            "url": "http://example.com/computer-science/c/%E4%BD%8D%E8%BF%90%E7%AE%97/",
            "title": "位运算",
            "date_published": "2022-11-05T08:53:18.165Z",
            "content_html": "<h1 id=\"位运算\"><a class=\"markdownIt-Anchor\" href=\"#位运算\">#</a> 位运算</h1>\n<p>​\t位运算是计算机对于各种数字的本质处理方式，掌握位运算不仅有利于处理一些关于二进制问题的简便方法，同时也有利于对于某些复杂运算的快速求解。。（绝对不是为了装 b）</p>\n<h2 id=\"求一个整数转化为二进制时1的个数\"><a class=\"markdownIt-Anchor\" href=\"#求一个整数转化为二进制时1的个数\">#</a> 求一个整数转化为二进制时 1 的个数</h2>\n<h3 id=\"方法\"><a class=\"markdownIt-Anchor\" href=\"#方法\">#</a> 方法</h3>\n<p>​\t不废话，上代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><br><span class=\"hljs-type\">int</span> x,count=<span class=\"hljs-number\">0</span>;<br>cin&gt;&gt;x;<br><span class=\"hljs-keyword\">while</span>(x)<br>&#123;<br>\tx&amp;=(x<span class=\"hljs-number\">-1</span>);<br>\tcount++;<br>&#125;<br>cout&lt;&lt;count;<br></code></pre></td></tr></table></figure>\n<p>这个代码的原理在于：</p>\n<ol>\n<li>对一个数减一在二进制上所产生的变化是：从低位像高位找到第一个 1，非从此之后的数。</li>\n<li>x 与（x-1）相当于将上述所有产生变化的数归 0，如此以来我们成功 “消除” 了一个 1。。</li>\n<li>继续消除，直到全为 0</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/c/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "url": "http://example.com/computer-science/c/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",
            "title": "动态规划",
            "date_published": "2022-10-24T10:18:10.587Z",
            "content_html": "<h1 id=\"动态规划\"><a class=\"markdownIt-Anchor\" href=\"#动态规划\">#</a> 动态规划</h1>\n<h2 id=\"入门\"><a class=\"markdownIt-Anchor\" href=\"#入门\">#</a> 入门</h2>\n<h3 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h3>\n<p>​\t动态规划是我们运用算法解决问题的一种方式，我们可以将它简单的理解成：找递推式。有时我们碰到一个非常复杂的问题，往往可以通过找递推式的方法把他分解成子问题，再将子问题分解成孙问题。。。在有穷次分解后可以得到一个或几个拥有显而易见答案的简单 “后代问题”，程序将上述分解的方法再逆过来执行一遍就能够解决这样的复杂问题。与分而治之不同，动态规划在对问题分解时运用的是找递推式的思想，这意味着分解出的问题相似性很高以至于许多时候我们习惯于直接借助计算机分解问题。而计算机在接下来的步骤中有需要将这些问题逆向加和，因此，不妨在写代码时将这二者合并，最后呈现出的代码反而是先定义基元问题，通过递推式层层向上合成，最终到达一定限度，停止运算。</p>\n<p>​</p>\n<p>如果您感到困惑，我希望下面的题例能够帮助你：</p>\n<h3 id=\"noip2002-普及组-过河卒\"><a class=\"markdownIt-Anchor\" href=\"#noip2002-普及组-过河卒\">#</a> [NOIP2002 普及组] 过河卒</h3>\n<h4 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\">#</a> 题目描述</h4>\n<p>棋盘上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 点有一个过河卒，需要走到目标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 点。卒行走的规则：可以向下、或者向右。同时在棋盘上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 点有一个对方的马，该马所在的点和所有跳跃一步可达的点称为对方马的控制点。因此称之为 “马拦过河卒”。</p>\n<p>棋盘用坐标表示，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0, 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n, m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span>，同样马的位置坐标是需要给出的。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/vg6k477j.png\" alt=\"\"></p>\n<p>现在要求你计算出卒从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 点能够到达 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 点的路径的条数，假设马的位置是固定不动的，并不是卒走一步马走一步。</p>\n<h4 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\">#</a> 输入格式</h4>\n<p>一行四个正整数，分别表示 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 点坐标和马的坐标。</p>\n<h4 id=\"输出格式\"><a class=\"markdownIt-Anchor\" href=\"#输出格式\">#</a> 输出格式</h4>\n<p>一个整数，表示所有的路径条数。</p>\n<h4 id=\"样例-1\"><a class=\"markdownIt-Anchor\" href=\"#样例-1\">#</a> 样例 #1</h4>\n<p>样例输入 #1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">6 6 3 3<br></code></pre></td></tr></table></figure>\n<p>样例输出 #1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">6<br></code></pre></td></tr></table></figure>\n<h4 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\">#</a> 提示</h4>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100 \\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">1 \\le n, m \\le 20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">0 \\le</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span></span></span></span> 马的坐标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">\\le 20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>。</p>\n<p><strong>【题目来源】</strong></p>\n<p>NOIP 2002 普及组第四题</p>\n<h4 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h4>\n<ol>\n<li>\n<p>这是一个经典的动态规划问题 —— 统计路径条数。我们可以直观的感受到，即使添加了只能向下或向右的限制，统计到达某一点所有路径的方案也并不容易，这是一个极为复杂的问题，并且随着你标点于原点的距离越来越远，工程将会越来越大。不过，如果将这个问题交给动态规划，事情瞬间就会变得清晰明了。</p>\n<ol>\n<li>对于某一点 (<em>i</em>,<em>j</em>)，设函数<em> f</em>(<em>i</em>,<em>j</em>) 为从原点到这一点的所有路径数，不难找到他的递推式之一即为:</li>\n<li>得到了这样的递推式后，我们自然想要将这样的递推式写在程序里。我们如何储存这样的递推式呢？或许你的第一反应是去想办法写出类似的递归函数，然后寻找某个边界值。这样的思路自然是最简单的，但也是最危险的。不妨设想一下，如果将 i 语 j 的数字设置的很大 —— 也许不需要很大，甚至二十几就足够让这样的函数无穷的递归中反反复复 —— 并且他们所计算的值甚至非常相似。</li>\n<li>事实上，通常的做法是，我们往往会使用一串数组去存储函数 f (i,j) 的所有因变量 —— 这取决于传入的 i 和 j 的大小。这样的好处是，当我们去使用递推式的时候，我们不用从新进行一次递归，而是取用已经递归出的结果。这样不仅占用空间较少，而且能让你的程序可运行。</li>\n<li>当然，使用数组定义的函数还存在许多问题。在这一题中，我们就必须为了保证不会出现 f (-1,0) 的情况将所有传入的坐标被迫加 1。</li>\n<li>最后，设置一个初始的基元，比如 f (0,1)=1，使用循环顺序遍历数组，将将函数值通过递推式计算后一一填入即可。</li>\n</ol>\n</li>\n<li>\n<p>在解决了路径统计之后，我们面临的问题就是：如何将马控制点去除？事实上，如果你很好的理解了上面的叙述，将马去除这件事再简单不过了：</p>\n<ol>\n<li>将马控制点去除，我们只需要让 f (xm,ym)=0，也就是说能够达到马控制点的路径一个都没有加到上述的递推式中即可。</li>\n<li>找出所有 xm 与 ym 也非常简单，因为你很容易就能发现这些点与给出的马的坐标的距离为定值。我们只需要在遍历数组是添加一个判断即可。</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"参考代码\"><a class=\"markdownIt-Anchor\" href=\"#参考代码\">#</a> 参考代码</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> ll long long</span><br>ll <span class=\"hljs-title function_\">lujingshu</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">int</span>)</span>;<br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span> <br>&#123;<br>\t<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> result;<br>\t<span class=\"hljs-type\">int</span> bx, by, mx, my;<br>\t<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d%d%d%d&quot;</span>, &amp;bx, &amp;by, &amp;mx, &amp;my);<br>\tresult = lujingshu(bx, by, mx, my);<br>\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%lld&quot;</span>, result);<br>&#125;<br><br>ll <span class=\"hljs-title function_\">lujingshu</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y, <span class=\"hljs-type\">int</span> mx, <span class=\"hljs-type\">int</span> my)</span><br>&#123;<br>\tll r = <span class=\"hljs-number\">0</span>;<br>\tx++;<br>\ty++;<br>\tmx++;<br>\tmy++;<br>\tll f[<span class=\"hljs-number\">22</span>][<span class=\"hljs-number\">22</span>] = &#123;<span class=\"hljs-number\">0</span>&#125;;<br>\tf[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= x; i++) <br>    &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= y; j++) <br>        &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (((i - mx) * (i - mx) + (j - my) * (j - my) == <span class=\"hljs-number\">5</span> ) || (i == mx &amp;&amp; j == my)) &#123;<br>\t\t\t\tf[i][j] = <span class=\"hljs-number\">0</span>;<br>\t\t\t&#125;<br>            <span class=\"hljs-keyword\">else</span> <br>            &#123;<br>\t\t\t\tf[i][j] = f[i][j - <span class=\"hljs-number\">1</span>] + f[i - <span class=\"hljs-number\">1</span>][j];<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>\tr = f[x][y];<br>\t<span class=\"hljs-keyword\">return</span> r;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h2>\n",
            "tags": []
        },
        {
            "id": "http://example.com/genshine-impact/%E5%85%83%E7%B4%A0%E8%AE%BA/",
            "url": "http://example.com/genshine-impact/%E5%85%83%E7%B4%A0%E8%AE%BA/",
            "title": "元素论",
            "date_published": "2022-10-16T13:15:47.887Z",
            "content_html": "<h1 id=\"元素论\"><a class=\"markdownIt-Anchor\" href=\"#元素论\">#</a> 元素论</h1>\n<h2 id=\"第一章绪论\"><a class=\"markdownIt-Anchor\" href=\"#第一章绪论\">#</a> 第一章：绪论</h2>\n<h3 id=\"11-元素简介\"><a class=\"markdownIt-Anchor\" href=\"#11-元素简介\">#</a> 1.1 元素简介</h3>\n",
            "tags": []
        }
    ]
}