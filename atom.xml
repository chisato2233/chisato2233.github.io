<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Hexo</title>
    <link href="http://example.com" />
    <updated>2022-10-24T10:18:10.587Z</updated>
    <entry>
        <id>http://example.com/computer-science/c/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</id>
        <title>动态规划</title>
        <link rel="alternate" href="http://example.com/computer-science/c/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
        <content type="html">&lt;h1 id=&#34;动态规划&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动态规划&#34;&gt;#&lt;/a&gt; 动态规划&lt;/h1&gt;
&lt;h2 id=&#34;入门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#入门&#34;&gt;#&lt;/a&gt; 入门&lt;/h2&gt;
&lt;h3 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h3&gt;
&lt;p&gt;​	动态规划是我们运用算法解决问题的一种方式，我们可以将它简单的理解成：找递推式。有时我们碰到一个非常复杂的问题，往往可以通过找递推式的方法把他分解成子问题，再将子问题分解成孙问题。。。在有穷次分解后可以得到一个或几个拥有显而易见答案的简单 “后代问题”，程序将上述分解的方法再逆过来执行一遍就能够解决这样的复杂问题。与分而治之不同，动态规划在对问题分解时运用的是找递推式的思想，这意味着分解出的问题相似性很高以至于许多时候我们习惯于直接借助计算机分解问题。而计算机在接下来的步骤中有需要将这些问题逆向加和，因此，不妨在写代码时将这二者合并，最后呈现出的代码反而是先定义基元问题，通过递推式层层向上合成，最终到达一定限度，停止运算。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;如果您感到困惑，我希望下面的题例能够帮助你：&lt;/p&gt;
&lt;h3 id=&#34;noip2002-普及组-过河卒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#noip2002-普及组-过河卒&#34;&gt;#&lt;/a&gt; [NOIP2002 普及组] 过河卒&lt;/h3&gt;
&lt;h4 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h4&gt;
&lt;p&gt;棋盘上 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;A&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点有一个过河卒，需要走到目标 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点。卒行走的规则：可以向下、或者向右。同时在棋盘上 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;C&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点有一个对方的马，该马所在的点和所有跳跃一步可达的点称为对方马的控制点。因此称之为 “马拦过河卒”。&lt;/p&gt;
&lt;p&gt;棋盘用坐标表示，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;A&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(0, 0)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;、&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(n, m)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，同样马的位置坐标是需要给出的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.luogu.com.cn/upload/image_hosting/vg6k477j.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在要求你计算出卒从 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;A&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点能够到达 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点的路径的条数，假设马的位置是固定不动的，并不是卒走一步马走一步。&lt;/p&gt;
&lt;h4 id=&#34;输入格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#输入格式&#34;&gt;#&lt;/a&gt; 输入格式&lt;/h4&gt;
&lt;p&gt;一行四个正整数，分别表示 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;B&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 点坐标和马的坐标。&lt;/p&gt;
&lt;h4 id=&#34;输出格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#输出格式&#34;&gt;#&lt;/a&gt; 输出格式&lt;/h4&gt;
&lt;p&gt;一个整数，表示所有的路径条数。&lt;/p&gt;
&lt;h4 id=&#34;样例-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#样例-1&#34;&gt;#&lt;/a&gt; 样例 #1&lt;/h4&gt;
&lt;p&gt;样例输入 #1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs plaintext&#34;&gt;6 6 3 3&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;样例输出 #1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs plaintext&#34;&gt;6&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提示&#34;&gt;#&lt;/a&gt; 提示&lt;/h4&gt;
&lt;p&gt;对于 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;100&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;%&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;100 \%&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.80556em;vertical-align:-0.05556em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的数据，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;mn&gt;20&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1 \le n, m \le 20&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.78041em;vertical-align:-0.13597em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;≤&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8304100000000001em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;≤&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;0 \le&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.78041em;vertical-align:-0.13597em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;≤&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 马的坐标 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;mn&gt;20&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\le 20&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7719400000000001em;vertical-align:-0.13597em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;≤&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【题目来源】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NOIP 2002 普及组第四题&lt;/p&gt;
&lt;h4 id=&#34;分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析&#34;&gt;#&lt;/a&gt; 分析&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;这是一个经典的动态规划问题 —— 统计路径条数。我们可以直观的感受到，即使添加了只能向下或向右的限制，统计到达某一点所有路径的方案也并不容易，这是一个极为复杂的问题，并且随着你标点于原点的距离越来越远，工程将会越来越大。不过，如果将这个问题交给动态规划，事情瞬间就会变得清晰明了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于某一点 (&lt;em&gt;i&lt;/em&gt;,&lt;em&gt;j&lt;/em&gt;)，设函数&lt;em&gt; f&lt;/em&gt;(&lt;em&gt;i&lt;/em&gt;,&lt;em&gt;j&lt;/em&gt;) 为从原点到这一点的所有路径数，不难找到他的递推式之一即为:&lt;/li&gt;
&lt;li&gt;得到了这样的递推式后，我们自然想要将这样的递推式写在程序里。我们如何储存这样的递推式呢？或许你的第一反应是去想办法写出类似的递归函数，然后寻找某个边界值。这样的思路自然是最简单的，但也是最危险的。不妨设想一下，如果将 i 语 j 的数字设置的很大 —— 也许不需要很大，甚至二十几就足够让这样的函数无穷的递归中反反复复 —— 并且他们所计算的值甚至非常相似。&lt;/li&gt;
&lt;li&gt;事实上，通常的做法是，我们往往会使用一串数组去存储函数 f (i,j) 的所有因变量 —— 这取决于传入的 i 和 j 的大小。这样的好处是，当我们去使用递推式的时候，我们不用从新进行一次递归，而是取用已经递归出的结果。这样不仅占用空间较少，而且能让你的程序可运行。&lt;/li&gt;
&lt;li&gt;当然，使用数组定义的函数还存在许多问题。在这一题中，我们就必须为了保证不会出现 f (-1,0) 的情况将所有传入的坐标被迫加 1。&lt;/li&gt;
&lt;li&gt;最后，设置一个初始的基元，比如 f (0,1)=1，使用循环顺序遍历数组，将将函数值通过递推式计算后一一填入即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在解决了路径统计之后，我们面临的问题就是：如何将马控制点去除？事实上，如果你很好的理解了上面的叙述，将马去除这件事再简单不过了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将马控制点去除，我们只需要让 f (xm,ym)=0，也就是说能够达到马控制点的路径一个都没有加到上述的递推式中即可。&lt;/li&gt;
&lt;li&gt;找出所有 xm 与 ym 也非常简单，因为你很容易就能发现这些点与给出的马的坐标的距离为定值。我们只需要在遍历数组是添加一个判断即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;参考代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考代码&#34;&gt;#&lt;/a&gt; 参考代码&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; ll long long&lt;/span&gt;&lt;br&gt;ll &lt;span class=&#34;hljs-title function_&#34;&gt;lujingshu&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt;)&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;br&gt;&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;long&lt;/span&gt; result;&lt;br&gt;	&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; bx, by, mx, my;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%d%d%d%d&amp;quot;&lt;/span&gt;, &amp;amp;bx, &amp;amp;by, &amp;amp;mx, &amp;amp;my);&lt;br&gt;	result = lujingshu(bx, by, mx, my);&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%lld&amp;quot;&lt;/span&gt;, result);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;ll &lt;span class=&#34;hljs-title function_&#34;&gt;lujingshu&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; mx, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; my)&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;	ll r = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;	x++;&lt;br&gt;	y++;&lt;br&gt;	mx++;&lt;br&gt;	my++;&lt;br&gt;	ll f[&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;][&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;br&gt;	f[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;; i &amp;lt;= x; i++) &lt;br&gt;    &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;; j &amp;lt;= y; j++) &lt;br&gt;        &amp;#123;&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (((i - mx) * (i - mx) + (j - my) * (j - my) == &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt; ) || (i == mx &amp;amp;&amp;amp; j == my)) &amp;#123;&lt;br&gt;				f[i][j] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;			&amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;br&gt;            &amp;#123;&lt;br&gt;				f[i][j] = f[i][j - &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] + f[i - &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;][j];&lt;br&gt;			&amp;#125;&lt;br&gt;		&amp;#125;&lt;br&gt;	&amp;#125;&lt;br&gt;	r = f[x][y];&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; r;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
</content>
        <updated>2022-10-24T10:18:10.587Z</updated>
    </entry>
    <entry>
        <id>http://example.com/games/yuansheng/%E5%8E%9F%E5%9C%A3%E5%9F%BA%E6%9C%AC%E4%BD%93%E7%B3%BB%E8%AF%B4%E6%98%8E01/</id>
        <title>原圣基本规则体系说明</title>
        <link rel="alternate" href="http://example.com/games/yuansheng/%E5%8E%9F%E5%9C%A3%E5%9F%BA%E6%9C%AC%E4%BD%93%E7%B3%BB%E8%AF%B4%E6%98%8E01/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;原圣是基于原神和三国杀结合的卡牌对战类游戏，体系主体为原神和三国杀的基本规则，因此在阅读本体系说明之前，作者建议对上述两款游戏不了解的读者尝试花费二十分钟初步掌握基本名词与概念，受限于篇幅，某些方面作者可能不会过分详细的指明。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;我们强烈建议读者不要在对于三国杀和原神基本规则一知半解的前提下阅读正文。&lt;/u&gt;&lt;/p&gt;
&lt;h1 id=&#34;元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素&#34;&gt;#&lt;/a&gt; 元素&lt;/h1&gt;
&lt;h2 id=&#34;元素种类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素种类&#34;&gt;#&lt;/a&gt; 元素种类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;与原神对应的，本游戏所使用的元素种类同样为 &amp;quot;火水冰雷草岩风&amp;quot; 七种。&lt;/li&gt;
&lt;li&gt;原圣中的每个元素都映射实体牌中的一种属性。这些元素依照下面的规则做映射：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​						火   					红桃 [花色]&lt;br&gt;
​						水   					梅花 [花色]&lt;br&gt;
​						冰   					方片 [花色]&lt;br&gt;
​						雷   					黑桃 [花色]&lt;br&gt;
​						草   					A~4 [点数]&lt;br&gt;
​						风   					5~8 [点数]&lt;br&gt;
​						岩   					9~K [点数]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;诸如上述的映射具有这样的意义：
&lt;ol&gt;
&lt;li&gt;在角色试图触发技能时，他们所需要用于支付代价的牌会根据他们的所属元素而限定在某一类之上，如此以便于通过控制牌堆结构进一步控制某种元素的整体角色强度。&lt;/li&gt;
&lt;li&gt;方便进行元素附着时的判断。(这一点的本意会在 1.2 小节会具体告知读者)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;原圣规则体系不会删除和增加任何元素 —— 除非原神官方明确对于元素种类方面做出改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;元素伤害&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素伤害&#34;&gt;#&lt;/a&gt; 元素伤害&lt;/h2&gt;
&lt;h3 id=&#34;物理伤害&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#物理伤害&#34;&gt;#&lt;/a&gt; 物理伤害&lt;/h3&gt;
&lt;p&gt;本小节的名称虽然为 &amp;quot;元素伤害&amp;quot;，但是三国杀与原神中的 &amp;quot;非元素伤害&amp;quot; 定义有所不同，规则集没有必要特别的建立一个小节阐明 &amp;quot;非元素伤害&amp;quot; 的性质，因此将其归入本小节中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物理伤害在游戏中出现频率极低，方便起见，在任何场合下单独出现的名词 &amp;quot;伤害&amp;quot;，均等效替换为 &amp;quot;元素伤害&amp;quot;。&lt;/li&gt;
&lt;li&gt;由于目前原神中未出现单角色能够触发多种元素伤害的前提，因此在角色技能描述的场合下出现的 &amp;quot;元素伤害&amp;quot; 均替换为与该角色同名的 &amp;quot;X 元素伤害&amp;quot;。&lt;/li&gt;
&lt;li&gt;在极个别场合下为了统称 &amp;quot;物理伤害&amp;quot; 与 &amp;quot;元素伤害&amp;quot;，我们将包含二者的集合称为 &amp;quot;宏伤害&amp;quot;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;元素伤害-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素伤害-2&#34;&gt;#&lt;/a&gt; 元素伤害&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;元素伤害的种类与元素种类一一对应，在此本文不再赘述&lt;/li&gt;
&lt;li&gt;元素伤害与元素附着是两个独立概念，在原圣的某些场合下会出现受到元素伤害的同时触发反应，因此可能会给某些玩家产生误解，在此特别强调&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;元素附着&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素附着&#34;&gt;#&lt;/a&gt; 元素附着&lt;/h2&gt;
&lt;h3 id=&#34;元素附着区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素附着区&#34;&gt;#&lt;/a&gt; 元素附着区&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;元素附着区是原圣中特有的区域，替换了三国杀中的判定区，此区域用于存放角色的当前元素附着，方便起见，后文中简称的 &amp;quot;元素区&amp;quot; 代指元素附着区&lt;/li&gt;
&lt;li&gt;元素区有这样的性质：
&lt;ol&gt;
&lt;li&gt;同名元素附着最多存在两张，后手附着叠放于先手附着之上&lt;/li&gt;
&lt;li&gt;回合结束时，清空元素区所有竖置的元素附着&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;附着牌&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附着牌&#34;&gt;#&lt;/a&gt; 附着牌&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;附着牌是原圣中的一种特有概念，附着牌是一种可以进行附着的牌，他用于提示玩家一名角色的元素附着状态。&lt;/li&gt;
&lt;li&gt;为保证叙述的流畅性，我们会在一些场合在不产生歧义的前提下，将附着牌与元素附着等价&lt;/li&gt;
&lt;li&gt;玩家可以将手中某张满足映射，且所映射元素种类与角色同名的任意牌当做附着牌。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;附着&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附着&#34;&gt;#&lt;/a&gt; 附着&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;附着是原圣中的一种行为，他代指改变角色元素区状态的动作。玩家可以通过下面的方式进行附着行动：&lt;/p&gt;
&lt;p&gt;​	&lt;u&gt;玩家可以将手中某张满足映射，且所映射元素种类与角色同名的任意牌声明为附着牌。出牌阶段限一次，玩家可以以此方式声明的附着牌竖置入一名其他角色的元素区。&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;附着的方式不止一种，角色造成伤害时，某些情况下也可以进行短暂的临时附着。以此法产生的临时附着遵循以下规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;每名玩家都拥有五条 “附着记录空间”，将他们分别称为 A 空间，B 空间，C 空间，D 空间和 E 空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每条记录空间最多存放一次临时附着的记录。玩家造成伤害前，会根据规则调用一条指定的记录空间。如果此空间已经被占用，则此次伤害将不会触发临时附着。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回合开始时，清空所有记录空间的临时附着记录。玩家造成伤害前，没有特别说明的情况下，进行临时元素附着并将此次附着记录于 A 空间中。某些角色的技能可以调用剩下的四种空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标明 “独立附着” 的伤害会从 A 空间开始遍历，直到找到空空间为止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成功临时附着的伤害结算完毕后，清空临时附着，因此这种附着不会留存进元素区。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;临时附着的规则拥有下面的更为通俗的解释：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在通常的状态下，每名角色每轮只能进行一次临时附着。&lt;/li&gt;
&lt;li&gt;某些角色技能可以额外触发临时附着，这种额外触发的附着也只能生效一次。&lt;/li&gt;
&lt;li&gt;带有 “独立附着” 的技能允许角色多次地触发元素附着，这类技能会占用上述两种手段所触发临时附着的次数。&lt;/li&gt;
&lt;li&gt;每名角色每轮最多五次临时附着。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
</content>
        <updated>2022-10-17T04:40:39.105Z</updated>
    </entry>
    <entry>
        <id>http://example.com/genshine-impact/%E5%85%83%E7%B4%A0%E8%AE%BA/</id>
        <title>元素论</title>
        <link rel="alternate" href="http://example.com/genshine-impact/%E5%85%83%E7%B4%A0%E8%AE%BA/"/>
        <content type="html">&lt;h1 id=&#34;元素论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素论&#34;&gt;#&lt;/a&gt; 元素论&lt;/h1&gt;
&lt;h2 id=&#34;第一章绪论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一章绪论&#34;&gt;#&lt;/a&gt; 第一章：绪论&lt;/h2&gt;
&lt;h3 id=&#34;11-元素简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-元素简介&#34;&gt;#&lt;/a&gt; 1.1 元素简介&lt;/h3&gt;
</content>
        <updated>2022-10-16T13:15:47.887Z</updated>
    </entry>
    <entry>
        <id>http://example.com/example/chisato-is-my-wife/</id>
        <title>练习题与答案</title>
        <link rel="alternate" href="http://example.com/example/chisato-is-my-wife/"/>
        <content type="html">&lt;ol&gt;
&lt;li class=&#34;quiz true&#34;&gt;
&lt;p&gt;编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz multi&#34;&gt;
&lt;p&gt;有基类  &lt;code&gt;SHAPE&lt;/code&gt; ，派生类  &lt;code&gt;CIRCLE&lt;/code&gt; ，声明如下变量： &lt;/p&gt;
 &lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cpp&#34;&gt;SHAPE shape1,*p1;&lt;br&gt;CIRCLE circle1,*q1;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下列哪些项是 “派生类对象替换基类对象”。&lt;/p&gt;
&lt;ul class=&#34;options&#34;&gt;
&lt;li class=&#34;correct&#34;&gt;&lt;code&gt;p1=&amp;amp;circle1;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q1=&amp;amp;shape1;&lt;/code&gt;&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;&lt;code&gt;shape1=circle1;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;circle1=shape1;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class=&#34;options&#34;&gt;
&lt;li&gt;✔️ 令基类对象的指针指向派生类对象&lt;/li&gt;
&lt;li&gt;❌ 派生类指针指向基类的引用&lt;/li&gt;
&lt;li&gt;✔️ 派生类对象给基类对象赋值&lt;/li&gt;
&lt;li&gt;❌ 基类对象给派生类对象赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz&#34;&gt;
&lt;p&gt;下列叙述正确的是 &lt;span class=&#34;gap&#34;&gt;&lt;/span&gt; 。&lt;/p&gt;
&lt;ul class=&#34;options&#34;&gt;
&lt;li&gt;虚函数只能定义成无参函数&lt;/li&gt;
&lt;li&gt;虚函数不能有返回值&lt;/li&gt;
&lt;li&gt;能定义虚构造函数&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;A、B、C 都不对&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz fill&#34;&gt;
&lt;p&gt;如果定义  &lt;code&gt;int e=8; double f=6.4, g=8.9;&lt;/code&gt; ，则表达式  &lt;code&gt;f+int (e/3*int (f+g)/2)%4&lt;/code&gt;  的值为 &lt;span class=&#34;gap&#34;&gt;9.4&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意运算顺序和数据类型&lt;br&gt;
&lt;span class=&#34;mistake&#34;&gt; 8.4&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2022-10-12T14:39:30.375Z</updated>
    </entry>
    <entry>
        <id>http://example.com/example/chisato%E4%B8%96%E7%95%8C%E7%AC%AC%E4%B8%80%E5%8F%AF%E7%88%B1%EF%BC%81%EF%BC%81%EF%BC%81/</id>
        <title>chisato世界第一可爱！！！</title>
        <link rel="alternate" href="http://example.com/example/chisato%E4%B8%96%E7%95%8C%E7%AC%AC%E4%B8%80%E5%8F%AF%E7%88%B1%EF%BC%81%EF%BC%81%EF%BC%81/"/>
        <content type="html">&lt;h3 id=&#34;太棒了我终于能写点东西在这个上面了现在这行真的是个markdown的标题新式吗&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#太棒了我终于能写点东西在这个上面了现在这行真的是个markdown的标题新式吗&#34;&gt;#&lt;/a&gt; 太棒了，我终于能写点东西在这个上面了 (现在这行真的是个 markdown 的标题新式吗。。）&lt;/h3&gt;
&lt;p&gt;这感觉真不错，你会喜欢这种感觉的，即使我觉得用 vim 写博客不是个好的体验。。。&lt;br&gt;
但是。。你也不会特别讨厌这种新奇的东西不是吗？&lt;/p&gt;
</content>
        <updated>2022-10-12T10:42:08.000Z</updated>
    </entry>
</feed>
